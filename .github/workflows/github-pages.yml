# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
##########################################################################
# This workflow will build a Java project with Gradle and
# cache/restore any dependencies to improve the workflow execution time
##########################################################################
name: 'Deploy Github Pages'
env:
  TZ: 'America/New_York'
  NODE_ENV: 'production'
  BABEL_ENV: 'production'
  PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GENERATE_SOURCEMAP: ${{ secrets.GENERATE_SOURCEMAP }}

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - '**'

#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false
# Workflow Jobs
jobs:
  # Execute build workflow
  setup-pages:
    uses: ./.github/workflows/build.yml
    secrets:
      PUBLIC_URL: ${{ secrets.PUBLIC_URL }}
      GENERATE_SOURCEMAP: ${{ secrets.GENERATE_SOURCEMAP }}

  # Deploy to GitHub pages only on main
  deploy-to-github-pages:
    needs: setup-pages
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || github.ref == 'refs/heads/github-pages' }}
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy GitHub Pages Demo App
        timeout-minutes: 5
        run: |
          ls -lia;
          git config --global user.name ${USER_NAME};
          git config --global user.name ${USER_EMAIL};
          git remote set-url origin https://${USER_NAME}:${LOGIN_TOKEN}@github.com/${GITHUB_REPOSITORY};
          cd ./SmartScraper;
          mkdir -p staging/docs;
          cp -rf ./www/** ./staging/docs;
          cp ../docs/demo-readme.md ./staging/README.md;
          cp ../LICENSE ./staging/LICENSE;          
          export NODE_ENV=${NODE_ENV};
          npm run deploy:github-pages;
        env:
          LOGIN_TOKEN: ${{ secrets.LOGIN_TOKEN }}
          NODE_ENV: ${{ env.NODE_ENV }};
          USER_NAME: ${{ secrets.USER_NAME }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          GENERATE_SOURCEMAP: ${{ secrets.GENERATE_SOURCEMAP }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
