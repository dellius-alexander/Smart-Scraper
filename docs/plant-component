@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class ChatBotDialog {
   constructor(props): 
   resizeTextarea(event): void
   handleInputChange(event): void
   checkboxStatus(event): void
   checkResponseModal(event): void
   handleSubmit(event): Promise<void>
   handleResponseSelection(event): void
   resetForm(): void
   render(): any
}
class ClientStrategy {
   constructor(): 
   context: IContext
   #getContext(): any
   create(type: string): IContext
}
class Context {
   strategy: IDefaultStrategy
   setStrategy(strategy: IDefaultStrategy): void
   execute(options: {prompt: null, layman: false}): JSON
}
class Gpt3 {
   constructor(props: any): 
   props: object
   state: {id: string, url: string, type: string,…
   sendRequest(options: {prompt: null; layman: false}): Promise<string | void | JSX.Element | J…
}
class IContext {
   setStrategy(strategy: IDefaultStrategy): any
   execute(options: {prompt: null; layman: false}): JSON
}
class Responsive {
   constructor(props): 
   mqMobile: MediaQueryList
   mqTablet: MediaQueryList
   mqIphone: MediaQueryList
   mqIpad: MediaQueryList
   mqWeb: MediaQueryList
   getDeviceInfo(): string
   handleMediaChange(mq: MediaQueryList): void
   scaleElement(event: Event): void
   init(): void
}
class IDefaultStrategy {
   sendRequest(options: {prompt: null; layman: false}): Promise<string | void | JSX.Element | J…
}

ChatBotDialog   -[#595959,dashed]->  ClientStrategy : "«create»"
ChatBotDialog   -[#595959,dashed]->  Responsive     : "«create»"
ClientStrategy  -[#595959,dashed]->  Gpt3           : "«create»"
ClientStrategy  *-[#595959,plain]-> "1" IContext       : "context"
ClientStrategy  -[#595959,dashed]->  IContext       
Context         -[#008200,dashed]-^  IContext       
Context         -[#595959,dashed]->  IDefaultStrategy
Context         *-[#595959,plain]-> "1" IDefaultStrategy       : "strategy"
Gpt3            -[#008200,dashed]-^  IDefaultStrategy
IContext        -[#595959,dashed]->  IDefaultStrategy
@enduml
